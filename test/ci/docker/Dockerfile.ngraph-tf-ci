# Environment to build and unit-test ngraph-tensorflow-bridge

FROM ubuntu:16.04

# Default python environment is python 2, thus python-pip and virtualenv
# python-numpy, python-dev, and python-wheel all needed for TensorFlow build
# git is needed to clone tensorflow repository
# unzip and wget are needed for installing bazel
# sudo is required for installing the TF wheel into /usr/local/...
# zlib1g, zlib1g-dev and bash-completion are required by bazel install
# zip and golang-go are needed to run TensorFlow tests
# curl and locate are needed by Tensorflow's configure command
# enum appears to be used in the TensorFlow build
RUN apt-get update &&  apt-get install -y \
    python-pip virtualenv \
    python-numpy python-dev python-wheel \
    git \
    unzip wget \
    sudo \
    zlib1g zlib1g-dev bash-completion \
    build-essential cmake \
    libtinfo-dev \
    zip golang-go \
    locate curl

# The "locate" command uses a prepopulated index.  If this index is not built,
# then "locate" will find absolutely nothing.  In Tensorflow's configure,
# this manifests itself as a silent failure of the configure script to run to
# completion.  Therefore, updatedb MUST BE RUN to provide an index for "locate".
RUN updatedb

# six, enum34 and mock are required for building the tensorflow wheel
# scipy, portpicker, and sklearn are needed by some TensorFlow tests
RUN pip install --upgrade pip
RUN pip install six enum34 mock
RUN pip install scipy portpicker sklearn

# We include pytest so the Docker image can be used for daily validation
RUN pip install --upgrade pytest

# FROM NG-TF:
# We need to be careful to run apt-get update in any RUN where apt-get install
# might be run.  This is needed due to docker layer limitations.
# RUN apt-get update && ./initial-setup-once-per-machine.ubuntu-16.04.sh
#
# REPLACED BY:
RUN apt-get update && apt-get install -y openjdk-8-jdk
#
# This bazel version works with current TF
RUN wget -c https://github.com/bazelbuild/bazel/releases/download/0.11.0/bazel_0.11.0-linux-x86_64.deb
RUN dpkg -i bazel_0.11.0-linux-x86_64.deb || true

# Copy in the run-as-user.sh script
# This will allow the builds, which are done in a mounted directory, to
# be run as the user who runs "docker run".  This then allows the mounted
# directory to be properly deleted by the user later (e.g. by jenkins).
WORKDIR /home

#TODO: remove or reenable this line, when appropriate
#DISABLED  ADD docker-scripts/run-as-user.sh /home/run-as-user.sh
